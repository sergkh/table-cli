on:
  push:
    tags:
    - 'v*'
  workflow_dispatch:

name: Release

jobs:
  build:
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest ]
        swift: ["5.10"]
    steps:
    - uses: actions/checkout@v3
    - uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift }}
    - name: Run tests
      run: swift test        
    - name: Set version
      run: bash -c 'echo "let appVersion = \"`git describe --abbrev=0 --tags` (`date +%F`)\""' > ./Sources/table/Version.swift  
    - name: Build
      run: swift build -c release
    - name: Upload linux artifact
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v3.1.0
      with:        
        name: release-binary-${{ matrix.os }}
        if-no-files-found: error
        retention-days: 1
        path: .build/x86_64-unknown-linux-gnu/release/table     
    - name: Upload OSX artifact
      if: ${{ matrix.os == 'macos-latest' }}
      uses: actions/upload-artifact@v3.1.0
      with:
        name: release-binary-${{ matrix.os }}
        if-no-files-found: error
        retention-days: 1
        path: .build/x86_64-apple-macosx/release/table
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3  
    - name: Rename osx file
      run: bash -c 'mv ./release-binary-macos-latest/table ./table'
    - name: Zip osx file
      uses: a7ul/tar-action@v1.1.0
      with:
        command: c
        files: ./table
        outPath: osx.tar.gz
    - name: Rename linux file
      run: bash -c 'rm -rf ./table && cp -r ./release-binary-ubuntu-latest/table ./table'
    - name: Zip linux file
      uses: a7ul/tar-action@v1.1.0
      with:
        command: c
        files: ./table
        outPath: linux.tar.gz
    - name: Create GH release
      id: create_release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          ./linux.zip
          ./osx.zip